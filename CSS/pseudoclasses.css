/* To style elements in a particular state e.g., hovered anchor. 
A way for selecting classes based on the current state of the element in the DOM. They start with : 
e.g., button:hover would select buttons currently hovered over.
One of the most common ones is we want to change an element when spmeone hovers their mouse over it.

A pseudo-element represents an actual part of the DOM 
whereas a pseudo-class represents the state of an element based on the user's interaction with it.*/


/*first-child selector; matches an element that is the first of its siblings; It is fragile; 
If you add or remove elements around, our CSS rules may break*/
article:first-child {
    font-size: 140%;
    font-style: bold;
}

article:last-child {
    font-style: bold;
}

/*first-of-type is applied to the first occurrence of elements of different types in a container.
Matches an element that is the first of its siblings, and also matches a certain type selector.*/
article:first-of-type {
    font-size: 140%;
    font-style: bold;
}

article p:first-of-type {
    font-size: 140%;
    font-style: bold;
}

article p:last-of-type {
    font-size: 140%;
    font-style: bold;
}

ul li:nth-child(odd) {
    color:deeppink;
}

/*To select visited hyperlinks, used pseudoclass visited. 
Use pseudoclass link to select all hyperlinks*/
a:visited, a:link {
    color:dodgerblue;
}

/*Pseudoclass applied when user hovers over an element.
Best practice is to use hover pseudoselector together with focus pseudoselector for users using Tab key on keyboard*/
a:hover, a:focus {
   color:deeppink;
   text-decoration: none;
}


/*PSEUDOCLASSES*/
p:first-child{
    color:plum;
}

p:first-of-type {
    color:orange;
}

p:nth-of-type(2n-1) {
    color:deeppink;
}

a:link {
    color: red;
}

a:visited {
    color: green;
}

input:focus {
    outline: 2px solid blue;
}

input:invalid:not(:focus) {
    outline: 2px solid red;
}